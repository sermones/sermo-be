basePath: /
definitions:
  auth.LoginRequest:
    properties:
      id:
        type: string
      password:
        type: string
    type: object
  auth.LoginResponse:
    properties:
      token:
        type: string
      user:
        properties:
          id:
            type: string
          username:
            type: string
        type: object
    type: object
  auth.SignUpRequest:
    properties:
      id:
        type: string
      nickname:
        type: string
      password:
        type: string
    type: object
  auth.SignUpResponse:
    properties:
      message:
        type: string
      user_id:
        type: string
    type: object
  image.DeleteImageRequest:
    properties:
      image_id:
        type: string
      user_id:
        type: string
    type: object
  image.DeleteImageResponse:
    properties:
      message:
        type: string
    type: object
  image.UploadImageResponse:
    properties:
      image:
        $ref: '#/definitions/models.Image'
      message:
        type: string
    type: object
  models.Image:
    properties:
      created_at:
        type: string
      file_name:
        type: string
      file_size:
        type: integer
      id:
        type: string
      mime_type:
        type: string
      updated_at:
        type: string
      url:
        type: string
      user_id:
        type: string
    type: object
  user.ProfileResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      nickname:
        type: string
      uuid:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Sermo Backend API 서버입니다.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Sermo Backend API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: 사용자 인증 후 JWT 토큰을 반환합니다.
      parameters:
      - description: 로그인 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: 로그인
      tags:
      - Authentication
  /auth/signup:
    post:
      consumes:
      - application/json
      description: 새로운 사용자 계정을 생성합니다.
      parameters:
      - description: 회원가입 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.SignUpResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
      summary: 회원가입
      tags:
      - Authentication
  /image/delete:
    delete:
      consumes:
      - application/json
      description: 사용자 이미지를 삭제합니다
      parameters:
      - description: 삭제 요청
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/image.DeleteImageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/image.DeleteImageResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 이미지 삭제
      tags:
      - image
  /image/upload:
    post:
      consumes:
      - multipart/form-data
      description: 사용자 이미지를 업로드하고 DB에 정보를 저장합니다
      parameters:
      - description: 사용자 ID
        in: formData
        name: user_id
        required: true
        type: string
      - description: 이미지 파일
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/image.UploadImageResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 이미지 업로드
      tags:
      - image
  /user/profile:
    get:
      consumes:
      - application/json
      description: 현재 인증된 사용자의 프로필 정보를 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ProfileResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 프로필 조회
      tags:
      - User
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: JWT 토큰을 사용한 Bearer 인증
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
