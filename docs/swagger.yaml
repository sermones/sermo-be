basePath: /
definitions:
  auth.LoginRequest:
    properties:
      id:
        type: string
      password:
        type: string
    type: object
  auth.LoginResponse:
    properties:
      token:
        type: string
      user:
        properties:
          id:
            type: string
          username:
            type: string
          uuid:
            type: string
        type: object
    type: object
  auth.SignUpRequest:
    properties:
      id:
        type: string
      nickname:
        type: string
      password:
        type: string
    type: object
  auth.SignUpResponse:
    properties:
      message:
        type: string
      uuid:
        type: string
    type: object
  bookmark.CreateSentenceBookmarkRequest:
    properties:
      sentence:
        maxLength: 1000
        minLength: 1
        type: string
    required:
    - sentence
    type: object
  bookmark.CreateSentenceBookmarkResponse:
    properties:
      message:
        type: string
      uuid:
        type: string
    type: object
  bookmark.CreateWordBookmarkRequest:
    properties:
      word:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - word
    type: object
  bookmark.CreateWordBookmarkResponse:
    properties:
      message:
        type: string
      uuid:
        type: string
    type: object
  bookmark.SentenceBookmarkResponse:
    properties:
      created_at:
        type: string
      sentence:
        type: string
      uuid:
        type: string
    type: object
  bookmark.WordBookmarkResponse:
    properties:
      created_at:
        type: string
      uuid:
        type: string
      word:
        type: string
    type: object
  chat.ChatHistoryRequest:
    properties:
      chatbot_uuid:
        type: string
      limit:
        maximum: 100
        minimum: 1
        type: integer
      offset:
        minimum: 0
        type: integer
    required:
    - chatbot_uuid
    type: object
  chat.ChatHistoryResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/chat.ChatMessageResponse'
        type: array
      total:
        type: integer
    type: object
  chat.ChatMessageResponse:
    properties:
      content:
        type: string
      created_at:
        type: string
      message_type:
        type: string
      uuid:
        type: string
    type: object
  chat.OnKeyboardRequest:
    properties:
      chatbot_uuid:
        type: string
    type: object
  chat.SendMessageRequest:
    properties:
      chatbot_uuid:
        type: string
      message:
        type: string
    required:
    - chatbot_uuid
    - message
    type: object
  chat.SendMessageResponse:
    properties:
      message:
        type: string
      message_type:
        type: string
      session_id:
        type: string
      timestamp:
        type: string
    type: object
  chat.StopChatRequest:
    properties:
      chatbot_uuid:
        type: string
    required:
    - chatbot_uuid
    type: object
  chatbot.ChatbotListResponse:
    properties:
      created_at:
        type: string
      details:
        type: string
      gender:
        type: string
      hashtags:
        items:
          type: string
        type: array
      image_id:
        type: string
      name:
        type: string
      uuid:
        type: string
    type: object
  chatbot.ChatbotResponse:
    properties:
      created_at:
        type: string
      details:
        type: string
      gender:
        type: string
      hashtags:
        items:
          type: string
        type: array
      image_id:
        type: string
      name:
        type: string
      uuid:
        type: string
    type: object
  chatbot.CreateChatbotRequest:
    properties:
      details:
        description: 상세 설명
        type: string
      gender:
        description: 성별 (male, female, unspecified)
        type: string
      hashtags:
        description: 해시태그 배열
        items:
          type: string
        type: array
      image_id:
        description: 사진 ID
        type: string
      name:
        description: 채팅봇 이름 (3-100자)
        type: string
    type: object
  chatbot.CreateChatbotResponse:
    properties:
      chatbot_id:
        type: string
      message:
        type: string
    type: object
  chatbot.DeleteChatbotResponse:
    properties:
      message:
        type: string
    type: object
  chatbot.UpdateChatbotRequest:
    properties:
      details:
        description: 상세 설명
        type: string
      gender:
        description: 성별 (male, female, unspecified)
        type: string
      hashtags:
        description: 해시태그 배열
        items:
          type: string
        type: array
      image_id:
        description: 사진 ID
        type: string
      name:
        description: 채팅봇 이름 (3-100자)
        type: string
    type: object
  chatbot.UpdateChatbotResponse:
    properties:
      message:
        type: string
    type: object
  image.DeleteImageRequest:
    properties:
      image_id:
        type: string
    type: object
  image.DeleteImageResponse:
    properties:
      message:
        type: string
    type: object
  image.GenerateImageRequest:
    properties:
      prompt:
        description: 이미지 생성 프롬프트 (필수)
        type: string
      style:
        description: 이미지 스타일 (선택사항, 비워두면 config의 애니메이션 프로필 사진 스타일 사용)
        type: string
    type: object
  image.GenerateImageResponse:
    properties:
      image_ids:
        description: 생성된 이미지 ID 리스트
        items:
          type: string
        type: array
      message:
        type: string
    type: object
  image.GetImageResponse:
    properties:
      image:
        $ref: '#/definitions/models.Image'
      message:
        type: string
      url:
        description: 프리사인드 URL (선택사항)
        type: string
    type: object
  image.UploadImageResponse:
    properties:
      image:
        $ref: '#/definitions/models.Image'
      message:
        type: string
    type: object
  models.Image:
    properties:
      created_at:
        type: string
      file_key:
        description: R2 파일 키 (images/userid/filename)
        type: string
      file_name:
        type: string
      file_size:
        type: integer
      id:
        type: string
      mime_type:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  user.ProfileResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      nickname:
        type: string
      uuid:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Sermo Backend API 서버입니다.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Sermo Backend API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: 사용자 인증 후 JWT 토큰을 반환합니다.
      parameters:
      - description: 로그인 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: 로그인
      tags:
      - Authentication
  /auth/signup:
    post:
      consumes:
      - application/json
      description: 새로운 사용자 계정을 생성합니다.
      parameters:
      - description: 회원가입 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.SignUpResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
      summary: 회원가입
      tags:
      - Authentication
  /bookmark/sentence:
    get:
      consumes:
      - application/json
      description: 현재 인증된 사용자의 모든 문장 북마크를 조회합니다. 최신순으로 정렬되어 반환됩니다.
      produces:
      - application/json
      responses:
        "200":
          description: 문장 북마크 목록
          schema:
            items:
              $ref: '#/definitions/bookmark.SentenceBookmarkResponse'
            type: array
        "401":
          description: 인증 실패
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 문장 북마크 전체 조회
      tags:
      - Bookmark
    post:
      consumes:
      - application/json
      description: 새로운 문장 북마크를 생성합니다. 문장은 1-1000자까지 입력 가능합니다.
      parameters:
      - description: 북마크 생성 요청 (sentence 필수)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/bookmark.CreateSentenceBookmarkRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 북마크 생성 성공
          schema:
            $ref: '#/definitions/bookmark.CreateSentenceBookmarkResponse'
        "400":
          description: 잘못된 요청 (문장 길이 제한 등)
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 인증 실패
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 문장 북마크 생성
      tags:
      - Bookmark
  /bookmark/sentence/date:
    get:
      consumes:
      - application/json
      description: 현재 인증된 사용자의 특정 날짜 문장 북마크를 조회합니다. 날짜는 YYYY-MM-DD 형식으로 입력해야 합니다.
      parameters:
      - description: '조회할 날짜 (YYYY-MM-DD 형식, 예: 2024-01-15)'
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 해당 날짜의 문장 북마크 목록
          schema:
            items:
              $ref: '#/definitions/bookmark.SentenceBookmarkResponse'
            type: array
        "400":
          description: 잘못된 날짜 형식
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 인증 실패
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 날짜별 문장 북마크 조회
      tags:
      - Bookmark
  /bookmark/word:
    get:
      consumes:
      - application/json
      description: 현재 인증된 사용자의 모든 단어 북마크를 조회합니다. 최신순으로 정렬되어 반환됩니다.
      produces:
      - application/json
      responses:
        "200":
          description: 단어 북마크 목록
          schema:
            items:
              $ref: '#/definitions/bookmark.WordBookmarkResponse'
            type: array
        "401":
          description: 인증 실패
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 단어 북마크 전체 조회
      tags:
      - Bookmark
    post:
      consumes:
      - application/json
      description: 새로운 단어 북마크를 생성합니다. 단어는 1-100자까지 입력 가능합니다.
      parameters:
      - description: 북마크 생성 요청 (word 필수)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/bookmark.CreateWordBookmarkRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 북마크 생성 성공
          schema:
            $ref: '#/definitions/bookmark.CreateWordBookmarkResponse'
        "400":
          description: 잘못된 요청 (단어 길이 제한 등)
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 인증 실패
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 단어 북마크 생성
      tags:
      - Bookmark
  /bookmark/word/date:
    get:
      consumes:
      - application/json
      description: 현재 인증된 사용자의 특정 날짜 단어 북마크를 조회합니다. 날짜는 YYYY-MM-DD 형식으로 입력해야 합니다.
      parameters:
      - description: '조회할 날짜 (YYYY-MM-DD 형식, 예: 2024-01-15)'
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 해당 날짜의 단어 북마크 목록
          schema:
            items:
              $ref: '#/definitions/bookmark.WordBookmarkResponse'
            type: array
        "400":
          description: 잘못된 날짜 형식
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 인증 실패
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 날짜별 단어 북마크 조회
      tags:
      - Bookmark
  /chat/history:
    post:
      consumes:
      - application/json
      description: 특정 채팅봇과의 대화 히스토리를 조회합니다
      parameters:
      - description: 히스토리 요청
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chat.ChatHistoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.ChatHistoryResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 채팅 히스토리 조회
      tags:
      - Chat
  /chat/onkeyboard:
    post:
      consumes:
      - application/json
      description: 키보드 입력 중임을 알리는 이벤트를 처리합니다
      parameters:
      - description: 키보드 입력 이벤트 요청
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chat.OnKeyboardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 이벤트 전송 성공
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 잘못된 요청
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 인증 실패
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 서버 오류
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 키보드 입력 이벤트
      tags:
      - Chat
  /chat/send:
    post:
      consumes:
      - application/json
      description: 기존 세션에 메시지를 전송합니다
      parameters:
      - description: 메시지 요청
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chat.SendMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.SendMessageResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 메시지 전송
      tags:
      - Chat
  /chat/start:
    get:
      consumes:
      - application/json
      description: 채팅을 시작하고 SSE 연결을 설정합니다
      parameters:
      - description: 채팅봇 UUID
        in: query
        name: chatbot_uuid
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSE 스트림
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 채팅 시작
      tags:
      - Chat
  /chat/stop:
    post:
      consumes:
      - application/json
      description: 활성 채팅 세션을 중단합니다
      parameters:
      - description: 세션 중단 요청
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chat.StopChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 채팅 세션 중단
      tags:
      - Chat
  /chatbot:
    get:
      consumes:
      - application/json
      description: 현재 인증된 사용자의 모든 채팅봇 목록을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/chatbot.ChatbotListResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 사용자별 채팅봇 목록 조회
      tags:
      - Chatbot
    post:
      consumes:
      - application/json
      description: 새로운 채팅봇을 생성합니다.
      parameters:
      - description: 채팅봇 생성 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chatbot.CreateChatbotRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/chatbot.CreateChatbotResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 채팅봇 생성
      tags:
      - Chatbot
  /chatbot/{id}:
    delete:
      consumes:
      - application/json
      description: 특정 채팅봇 ID로 채팅봇을 삭제합니다.
      parameters:
      - description: 채팅봇 UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chatbot.DeleteChatbotResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 채팅봇 삭제
      tags:
      - Chatbot
    get:
      consumes:
      - application/json
      description: 특정 채팅봇 ID로 채팅봇 정보를 조회합니다.
      parameters:
      - description: 채팅봇 UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chatbot.ChatbotResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 채팅봇 ID로 조회
      tags:
      - Chatbot
    put:
      consumes:
      - application/json
      description: 특정 채팅봇 ID로 채팅봇 내용을 수정합니다. UUID와 UserID는 변경할 수 없습니다.
      parameters:
      - description: 채팅봇 UUID
        in: path
        name: id
        required: true
        type: string
      - description: 수정할 채팅봇 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chatbot.UpdateChatbotRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chatbot.UpdateChatbotResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 채팅봇 수정
      tags:
      - Chatbot
  /image/{image_id}:
    get:
      consumes:
      - application/json
      description: 이미지 정보를 조회하고 프리사인드 URL을 생성합니다
      parameters:
      - description: 이미지 ID
        in: path
        name: image_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/image.GetImageResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 이미지 조회
      tags:
      - Image
  /image/{image_id}/download:
    get:
      consumes:
      - application/json
      description: 이미지를 직접 다운로드합니다
      parameters:
      - description: 이미지 ID
        in: path
        name: image_id
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 이미지 다운로드
      tags:
      - Image
  /image/delete:
    delete:
      consumes:
      - application/json
      description: 사용자 이미지를 삭제합니다
      parameters:
      - description: 삭제 요청
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/image.DeleteImageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/image.DeleteImageResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 이미지 삭제
      tags:
      - Image
  /image/generate:
    post:
      consumes:
      - application/json
      description: OpenAI를 사용하여 사용자 프롬프트에서 외형 관련 특징을 자동으로 추출하고, 이를 포함한 향상된 프롬프트로 Gemini
        API를 통해 이미지를 생성합니다. 회원가입한 사용자만 사용 가능하며, 이미지 사이즈는 config에서 자동으로 설정됩니다.
      parameters:
      - description: 이미지 생성 정보 (prompt는 필수, style은 선택사항)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/image.GenerateImageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 이미지 생성 성공
          schema:
            $ref: '#/definitions/image.GenerateImageResponse'
        "400":
          description: 잘못된 요청 (프롬프트 누락 등)
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 인증 실패
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 서버 오류 (OpenAI/Gemini API 오류 등)
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: AI 이미지 생성 (외형 특징 자동 추출)
      tags:
      - Image
  /image/test-upload:
    post:
      consumes:
      - multipart/form-data
      description: R2 없이 테스트하는 이미지 업로드
      parameters:
      - description: 이미지 파일
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/image.UploadImageResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 테스트용 이미지 업로드
      tags:
      - image
  /image/upload:
    post:
      consumes:
      - multipart/form-data
      description: 사용자 이미지를 업로드하고 DB에 정보를 저장합니다
      parameters:
      - description: 이미지 파일
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/image.UploadImageResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 이미지 업로드
      tags:
      - Image
  /user/profile:
    get:
      consumes:
      - application/json
      description: 현재 인증된 사용자의 프로필 정보를 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ProfileResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 프로필 조회
      tags:
      - User
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: JWT 토큰을 사용한 Bearer 인증
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
